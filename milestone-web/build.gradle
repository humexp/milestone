buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

ext['groovy.version'] = groovyVersion

dependencies {
    compile project(':criteria')

    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"

    compile 'org.springframework.boot:spring-boot-starter-jersey'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.security:spring-security-oauth2-client'
    compile 'org.springframework.security:spring-security-oauth2-jose'
    compile 'io.jsonwebtoken:jjwt:0.5.1' // TODO: check is it really required
    
    compile 'org.postgresql:postgresql:42.1.4'
    
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokProcessorVersion}"

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
}

test {
    useJUnitPlatform {
        exclude(
                '**/*TestIntegration*',
        )
    }
}

task testIntegration(type: Test) {
    useJUnitPlatform {
        include '**/*TestIntegration*'
    }
    systemProperties = System.properties as Map
}
