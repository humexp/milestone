############################################################
# DEFAULT PROPERTIES
############################################################

spring.application.name=milestone-web

# API configuration
spring.jersey.type = filter

# Db settings
db.url = jdbc:postgresql://localhost:5432/milestone
db.user = milestone
db.password = 123456

spring.jpa.hibernate.ddl-auto = validate
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL9Dialect

# Auth configuration
spring.security.oauth2.client.registration.google.client-id=281308896853-05v67kps8qmbipoqm2o08ugeomgnadah.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=DMlZuc3_htw0HbEdZjBbBwRh
#spring.security.oauth2.client.registration.google.redirect-uri="{baseUrl}/oauth2/callback/{registrationId}"


app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec=864000000

# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the client in the /oauth2/authorize request.
# We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris=http://localhost:3000/oauth2/redirect, myandroidapp://oauth2/redirect, myiosapp://oauth2/redirect, http://localhost:8080/api/system/test